package com.group.a5g.smartmeterandreceptacle;

import android.content.SharedPreferences;
import android.os.Bundle;
import android.preference.PreferenceManager;
import android.support.annotation.Nullable;
import android.support.v7.app.AppCompatActivity;
import android.text.Editable;
import android.text.TextWatcher;
import android.util.Log;
import android.view.KeyEvent;
import android.view.View;
import android.widget.Button;
import android.widget.EditText;
import android.widget.TextView;

import java.math.BigInteger;
import java.security.MessageDigest;
import java.security.NoSuchAlgorithmException;

/**
 * Created by Daniel Phillips on 10/25/2016.
 */

public class ChangeKeyActivity extends AppCompatActivity {
    private EditText Key;
    @Override
    protected void onCreate(@Nullable Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_changekey);
        setTitle("Change Key");
        final SharedPreferences data = PreferenceManager
                .getDefaultSharedPreferences(this);
        String StoredKey = data.getString("MeterKey", "None");
        Button SubmitKey = (Button) findViewById(R.id.changekey_submit);
        TextView ShowStoredKey = (TextView)findViewById(R.id.change_key_CurrentKey);
        ShowStoredKey.setText("Current Key: "+StoredKey); // Displays the Current Key
        SubmitKey.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View view) {
                SaveKey();
            }
        });
        Key = (EditText)findViewById(R.id.changekey_key);
        Key.addTextChangedListener(filterTextWatcher);
        Key.setOnKeyListener(new View.OnKeyListener() {
            @Override
            public boolean onKey(View view, int i, KeyEvent keyEvent) {
                if(i == KeyEvent.KEYCODE_DEL) {
                    Key.setText("");
                }
                return false;
            }
        });
    }
    private TextWatcher filterTextWatcher = new TextWatcher() {

        @Override
        public void onTextChanged(CharSequence s, int start, int before, int count) {
            // Adds Hyphens to Improve Readability
            if(s.length() == 3 || s.length() == 7 || s.length() == 11 || s.length() == 15 || s.length() == 21){
                Key.append("-");
            }

        }

        @Override
        public void beforeTextChanged(CharSequence s, int start, int count, int after) {

        }

        @Override
        public void afterTextChanged(Editable s) {

        }
    };
    private void SaveKey(){
        SharedPreferences data = PreferenceManager
                .getDefaultSharedPreferences(this);
        SharedPreferences.Editor editor = data.edit();
        //Removes Hyphens and gets hash of key and stores values
        String FinalKey = Key.getText().toString().replace("-", "");
        String KeyMD5 =  md5(FinalKey);
        editor.putString("MeterKey", FinalKey);
        editor.putString("MD5MeterKey",KeyMD5);
        editor.commit();
        Log.d("MD5",KeyMD5);
        finish();

    }
    private static String md5(String input)  {
        //Generates MD5 Hash so that the App can Find the Files Generated by the meter and vice versa
        try{
            MessageDigest md = MessageDigest.getInstance("MD5");
            byte[] messageDigest = md.digest(input.getBytes());
            BigInteger number = new BigInteger(1, messageDigest);
            return String.format("%032x", number);
        } catch (NoSuchAlgorithmException e) {
            e.printStackTrace();
            return "";
        }

    }

}
